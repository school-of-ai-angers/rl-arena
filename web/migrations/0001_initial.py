# Generated by Django 2.2.5 on 2019-10-19 12:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Duel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.PositiveIntegerField()),
                ('num_matches', models.PositiveIntegerField()),
                ('state', models.CharField(choices=[('SCHEDULED', ''), ('RUNNING', ''), ('FAILED', ''), ('COMPLETED', '')], max_length=100)),
                ('started_at', models.DateTimeField(blank=True)),
                ('ended_at', models.DateTimeField(blank=True)),
                ('logs', models.FilePathField(blank=True, path='/app/data/media/duel_logs/')),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('num_matches_in_duel', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('zip_file', models.FileField(upload_to='submissions/')),
                ('github_commit', models.CharField(blank=True, max_length=200, validators=[django.core.validators.RegexValidator('^https://github.com/[^/]+/[^/]+/tree/[^/]+$')])),
                ('is_public', models.BooleanField()),
                ('state', models.CharField(choices=[('WAITING_BUILD', ''), ('BUILDING', ''), ('BUILD_FAILED', ''), ('WAITING_SMOKE_TEST', ''), ('TESTING', ''), ('FAILED_SMOKE_TEST', ''), ('READY', '')], max_length=100)),
                ('image_started_at', models.DateTimeField(blank=True)),
                ('image_ended_at', models.DateTimeField(blank=True)),
                ('image_name', models.CharField(blank=True, max_length=200)),
                ('image_logs', models.FilePathField(blank=True, path='/app/data/media/submission_image_logs/')),
                ('test_started_at', models.DateTimeField(blank=True)),
                ('test_ended_at', models.DateTimeField(blank=True)),
                ('test_logs', models.FilePathField(blank=True, path='/app/data/media/submission_test_logs/')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.Environment')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition', models.PositiveIntegerField()),
                ('current_round', models.PositiveIntegerField()),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('RUNNING', ''), ('FAILED', ''), ('COMPLETED', '')], max_length=100)),
                ('ended_at', models.DateTimeField(blank=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Environment')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('github', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.PositiveIntegerField()),
                ('losses', models.PositiveIntegerField()),
                ('draws', models.PositiveIntegerField()),
                ('points', models.PositiveIntegerField()),
                ('total_score', models.FloatField()),
                ('ranking', models.PositiveIntegerField()),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Submission')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Tournament')),
            ],
        ),
        migrations.AddField(
            model_name='tournament',
            name='submissions',
            field=models.ManyToManyField(through='web.TournamentSubmission', to='web.Submission'),
        ),
        migrations.AddField(
            model_name='submission',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.User'),
        ),
        migrations.CreateModel(
            name='DuelSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.PositiveIntegerField()),
                ('loss', models.PositiveIntegerField()),
                ('draw', models.PositiveIntegerField()),
                ('score', models.FloatField()),
                ('duel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Duel')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Submission')),
            ],
        ),
        migrations.AddField(
            model_name='duel',
            name='submissions',
            field=models.ManyToManyField(through='web.DuelSubmission', to='web.Submission'),
        ),
        migrations.AddField(
            model_name='duel',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Tournament'),
        ),
    ]
